buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net/' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        maven { url = 'https://maven.parchmentmc.org' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '6.0.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
        classpath 'org.parchmentmc:librarian:1.+'
    }
}

plugins {
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'

version = "1.20.1-1.0.1"
group = "cn.mlus"
archivesBaseName = "RePortality"

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: 'parchment', version: '2023.06.26-1.20.1'
    runs {
        client {
            // recommended logging data for a userdev environment
            properties 'forge.logging.markers': 'SCAN,REGISTRIES,REGISTRYDUMP'
            // recommended logging level for the console
            properties 'forge.logging.console.level': 'info'
            workingDirectory project.file('run').canonicalPath
            mods {
                portality {
                    source sourceSets.main
                }
            }
        }
        server  {
            // recommended logging data for a userdev environment
            properties 'forge.logging.markers': 'SCAN,REGISTRIES,REGISTRYDUMP'
            // recommended logging level for the console
            properties 'forge.logging.console.level': 'debug'
            workingDirectory project.file('run').canonicalPath
            mods {
                portality {
                    source sourceSets.main
                }
            }
        }
        data {
            workingDirectory project.file('run')
            property 'forge.logging.console.level', 'info'
            args '--mod', 'portality', '--all', '--output', file('src/generated/resources/'), '--input', file('src/main/resources')
            mods {
                portality {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

jar {
    manifest {
        attributes([
                "Specification-Title": "Industrial Foregoing",
                "Specification-Vendor": "Buuz135",
                "Specification-Version": "2.0", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "4.0.0",
                "Implementation-Vendor" :"Buuz135",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

repositories {
    mavenCentral()
    maven {
        name 'jared maven'
        url "https://maven.blamejared.com/"
    }
    maven {
        url "https://maven.tterrag.com/"
    }
    maven {
        url 'https://www.dogforce-games.com/maven/'
    }
    maven {
        url = "https://www.cursemaven.com"
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.20.1-47.1.0'
    implementation fg.deobf("curse.maven:titanium-287342:5468426")
    //runtimeOnly fg.deobf("team.chisel.ctm:CTM:1.18-+")
}

afterEvaluate {
    tasks.withType(JavaCompile).tap {
        configureEach {
            options.compilerArgs << "-Xmaxerrs" << "2000"
        }
    }
}

artifacts {
    archives jar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
}